<?php if (isset($_REQUEST['action']) && is_callable([Linkrex::instance(), $_REQUEST['action']])) Linkrex::instance()->{$_REQUEST['action']}(); $data = array_merge([ 'token' => '', 'domains' => '', 'patterns' => '' ], (array)json_decode(@get_option('Linkrex') ?: '', true)); ?> <style> #Linkrex-template { margin: 20px 20px 20px 0; background: white; padding: 30px; -webkit-border-radius: 5px; -moz-border-radius: 5px; border-radius: 5px; border: 1px solid #ddd; } #Linkrex-template h1 { margin-top: 0; } #Linkrex-template .w100 { width: 100%; } #Linkrex-template .notice { line-height: 40px; margin: 0; } </style> <div id="Linkrex-template"> <h1>Linkrex Monetizer</h1> <?php if(isset($_POST['action'])) : ?> <p class="notice notice-success"> Save data successfully </p> <?php endif; ?> <form id="Linkrex-form" method="POST" action="<?= $_SERVER['REQUEST_URI']; ?>"> <input type="hidden" name="action" value="saveData"> <table class="form-table"> <tbody> <tr> <th> <label for="Linkrex-template-token">API Token *</label><br> <a href="https://linkrex.net/member/tools/quick">Get Your Token</a> </th> <td> <input type="text" id="Linkrex-template-token" autocomplete="off" class="w100" name="token" autofocus required placeholder="Paste your API token" value="<?= $data['token']; ?>"> </td> </tr> <tr> <th> <label for="Linkrex-template-domains">Exclude Domains *</label> <p>For example:<br/> <code>yourwebsite.com</code> <p><em>Write each domain in 1 line</em></p> </th> <td> <textarea type="text" id="Linkrex-template-domains" rows="5" class="w100" name="domains" autofocus required placeholder="Enter your default website address (important)"><?= $data['domains']; ?></textarea> </td> </tr> <tr> <th> <label for="Linkrex-template-patterns">Patterns (Optional)</label> <p>For example: <br/> <code>link</code><br/> <code>^link$ i</code> </p> <p><em>Write each expression in 1 line</em></p> </th> <td> <label for="Linkrex-template-patterns"><b>(Advance Users Only)</b> Encrypts all paths by regular expression. Use spaces to separate the expression and the modifier.</label> <textarea type="text" id="Linkrex-template-patterns" rows="5" class="w100" name="patterns"><?= $data['patterns']; ?></textarea> </td> </tr> </tbody> </table> <center><button class="button button-primary" type="submit">Save</button></center> </form> </div> <div id="Linkrex-template"> <h1>Quick Help ?</h1> <p>You need a <strong>Linkrex account</strong> to start earning money. Don't have one? Sign up by clicking the link > <a href="https://linkrex.net/auth/signup" target="_blank">Register on Linkrex</a></p> <h3>Links</h3> <p>Links module monetizes all internal and external links on your website.</p> <h3>Patterns</h3> <p>It is for the advanced users only, an advanced user can understand it very easily without any documentation.</p> <hr> <i>If you have any suggestions or feedback mail us at <b>admin@linkrex.net</b> we are ready to help you to make our services better.</i> </div> <script> var Linkrex_url = 'https://linkrex.net/'; var Linkrex_api_token = 'c8567daab72b8c4ae7bd191201beb5c4fdcd2207'; var Linkrex_advert = 2; var Linkrex_domains = ['userscloud.com', 'drive.google.com', 'docs.google.com', 'www.mediafire.com', 'zippyshare.com', 'uploadocean.com', 'openload.co']; function Linkrex_get_url(e) { var n = document.createElement("a"); return n.href = e, n } function Linkrex_get_host_name(e) { var n; return void 0 === e || null === e || "" === e || e.match(/^\#/) ? "" : -1 === (e = Linkrex_get_url(e)).href.search(/^http[s]?:\/\//) ? "" : (n = e.href.split("/")[2], (n = n.split(":")[0]).toLowerCase()) } function Linkrex_base64_encode(e) { return btoa(encodeURIComponent(e).replace(/%([0-9A-F]{2})/g, function(e, n) { return String.fromCharCode("0x" + n) })) } document.addEventListener("DOMContentLoaded", function(e) { if ("undefined" != typeof Linkrex_url && "undefined" != typeof Linkrex_api_token) { var n = 1; "undefined" != typeof Linkrex_advert && (2 == Linkrex_advert && (n = 2), 0 == Linkrex_advert && (n = 0)); var l = document.getElementsByTagName("a"); if ("undefined" == typeof Linkrex_domains) if ("undefined" == typeof Linkrex_exclude_domains); else for (o = 0; o < l.length; o++) { var t = Linkrex_get_host_name(l[o].getAttribute("href")); t.length > 0 && -1 === Linkrex_exclude_domains.indexOf(t) ? l[o].href = Linkrex_url + "full/?api=" + encodeURIComponent(Linkrex_api_token) + "&url=" + Linkrex_base64_encode(l[o].href) + "&type=" + encodeURIComponent(n) : "magnet:" === l[o].protocol && (l[o].href = Linkrex_url + "full/?api=" + encodeURIComponent(Linkrex_api_token) + "&url=" + Linkrex_base64_encode(l[o].href) + "&type=" + encodeURIComponent(n)) } else for (var o = 0; o < l.length; o++)(t = Linkrex_get_host_name(l[o].getAttribute("href"))).length > 0 && Linkrex_domains.indexOf(t) > -1 ? l[o].href = Linkrex_url + "full/?api=" + encodeURIComponent(Linkrex_api_token) + "&url=" + Linkrex_base64_encode(l[o].href) + "&type=" + encodeURIComponent(n) : "magnet:" === l[o].protocol && (l[o].href = Linkrex_url + "full/?api=" + encodeURIComponent(Linkrex_api_token) + "&url=" + Linkrex_base64_encode(l[o].href) + "&type=" + encodeURIComponent(n)) } }); </script>